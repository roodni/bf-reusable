// トランスパイル時に素数を列挙する

import "../../../sample/bfi_lib.bfr"

let puti = fun n -> [
  $var { x: cell; } in
  + x '0'
  *fix (fun loop -> fun n -> [
    $let rest = n / 10 in
    $let digit = n mod 10 in
    *(if rest = 0 then []
      else loop rest )
    + x (digit - rest mod 10)
    . x
  ]) n
]

let is_prime = fun n ->
  fix
    (fun loop -> fun i ->
      if i * i <= n then
        if n mod i = 0 then false
        else loop (i + 1)
      else true)
    2

main { sp: cell; } [
  + sp ' '

  *fix
    (fun loop -> fun i ->
      if i < 100 then [
        *(if is_prime i then [
            *puti i
            . sp
          ] else [] )
        *loop (i + 1)
      ] else [])
    2
]